# kafo main configuration file example
# you can rename it to kafo.yaml so it overwrite default kafo settings
# note current configuration is written to kafo.yaml every time kafo is run

## Installer configuration
# Human readable scenario name
# :name: default
# Description of the installer scenario and its purpose
# :description:
# Path to answer file, if the file does not exist a $pwd/config/answers.yaml is used as a fallback
# :answer_file: /etc/kafo/answers.yaml
# Custom installer path
# :installer_dir: /usr/share/kafo/
# Uncomment if you want to load puppet modules from a specific path, $pwd/modules is used by default,
# multiple dirs are allowed
# :module_dirs: /usr/share/kafo/modules
# Similar as modules_dir but for kafo internal modules, leave nil if you don't need to change it
# :kafo_modules_dir:
# Location of one or more optional caches of parsed module data, generate with kafo-export-params -f parsercache
# :parser_cache_path:
#   - /usr/share/kafo/parser_cache.yaml
#   - /usr/share/kafo/another_parser_cache.yaml
# Enable colors? If you don't touch this, we'll autodetect terminal capabilities
# :colors: true
# Color scheme, we support :bright and :dark (first is better for white background, dark for black background)
# :color_of_background: :dark

## Kafo tuning, customization of core functionality
# :no_prefix: false
# :mapping: {}
# :order:
# :low_priority_modules:

## Useful for development, e.g. when you want to move log files to local directory
# :log_dir: /var/log/kafo
# :log_name: configure.log
# :log_level: :info

# Change if you want to debug default answers for you modules, this directory holds default answers
# :default_values_dir: /tmp

## Advanced configuration - if not set it's ignored
# :log_owner: root
# :log_group: root
# :config_header_file:
# :dont_save_answers:
# :hiera_config: /usr/share/kafo/hiera.yaml

## Hooks - hooks in these extra directories will be loaded,
# by default they are loaded from $installer_dir/hooks/$type
# when you specify your directory, it will be search for $yourdir/$type/*.rb
# :hook_dirs:
# - /opt/hooks

## Checks - system checks in these extra directories will be loaded
# by default $installer_dir/checks is used
# :check_dirs:
# - /opt/checks

# custom storage is handy if you use hooks and you must store some configuration
# which should persist among installer runs. It can be also used for passing
# value from one hook to another.
# :custom: {}
